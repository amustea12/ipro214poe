/**
 * Gateway Software API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ActionDto', 'model/ActionSetDto', 'model/ActivePolicyValueDto', 'model/AddDeviceToSpaceDto', 'model/AddDeviceToZoneDto', 'model/ApplicationKeyDto', 'model/BatchLightingDto', 'model/BatchLightingListDto', 'model/CreateActionDto', 'model/CreateActionSetDto', 'model/CreateApplicationKeyDto', 'model/CreateDeviceNodeDto', 'model/CreateDimmerDto', 'model/CreateDimmerEventDto', 'model/CreateLightDto', 'model/CreateLightSensorDto', 'model/CreateLightSensorEventDto', 'model/CreateMotionSensorDto', 'model/CreateMotionSensorEventDto', 'model/CreateNetworkNodeDto', 'model/CreatePolicyDto', 'model/CreateRelayDto', 'model/CreateScheduleDto', 'model/CreateSpaceDto', 'model/CreateSwitchDto', 'model/CreateSwitchEventDto', 'model/CreateTemperatureSensorDto', 'model/CreateTemperatureSensorEventDto', 'model/CreateWebHookDto', 'model/CreateZoneDto', 'model/CreatedAtRouteNegotiatedContentResultActionDto', 'model/CreatedAtRouteNegotiatedContentResultActionSetDto', 'model/CreatedAtRouteNegotiatedContentResultApplicationKeyDto', 'model/CreatedAtRouteNegotiatedContentResultDeviceNodeDto', 'model/CreatedAtRouteNegotiatedContentResultDimmerDto', 'model/CreatedAtRouteNegotiatedContentResultLightDto', 'model/CreatedAtRouteNegotiatedContentResultLightSensorDto', 'model/CreatedAtRouteNegotiatedContentResultMotionSensorDto', 'model/CreatedAtRouteNegotiatedContentResultNodeDto', 'model/CreatedAtRouteNegotiatedContentResultPolicyDto', 'model/CreatedAtRouteNegotiatedContentResultScheduleDto', 'model/CreatedAtRouteNegotiatedContentResultSpaceDto', 'model/CreatedAtRouteNegotiatedContentResultSwitchDto', 'model/CreatedAtRouteNegotiatedContentResultTemperatureSensorDto', 'model/CreatedAtRouteNegotiatedContentResultWebHookDto', 'model/CreatedAtRouteNegotiatedContentResultZoneDto', 'model/DashboardDeviceStatusByDeviceTypeDto', 'model/DashboardDeviceStatusByNetworkSwitchDto', 'model/DashboardDeviceStatusBySpaceDto', 'model/DecoderFallback', 'model/DeviceDto', 'model/DeviceNodeDto', 'model/DevicesSearchResultDto', 'model/DimmerDto', 'model/EmergencyLightingSettingsDto', 'model/EncoderFallback', 'model/Encoding', 'model/EventDto', 'model/IContentNegotiator', 'model/IRequiredMemberSelector', 'model/LightDto', 'model/LightSensorDto', 'model/LightingDto', 'model/ListDtoActionDto', 'model/ListDtoActionSetDto', 'model/ListDtoActivePolicyValueDto', 'model/ListDtoApplicationKeyDto', 'model/ListDtoDashboardDeviceStatusByDeviceTypeDto', 'model/ListDtoDashboardDeviceStatusByNetworkSwitchDto', 'model/ListDtoDashboardDeviceStatusBySpaceDto', 'model/ListDtoDeviceDto', 'model/ListDtoDeviceNodeDto', 'model/ListDtoDimmerDto', 'model/ListDtoEventDto', 'model/ListDtoLightDto', 'model/ListDtoLightSensorDto', 'model/ListDtoMotionSensorDto', 'model/ListDtoNodeDto', 'model/ListDtoPolicyDto', 'model/ListDtoRelayDto', 'model/ListDtoScheduleDto', 'model/ListDtoSpaceDto', 'model/ListDtoSpaceTypeDto', 'model/ListDtoString', 'model/ListDtoSwitchDto', 'model/ListDtoTemperatureSensorDto', 'model/ListDtoWebHookDto', 'model/ListDtoZoneDto', 'model/MediaTypeFormatter', 'model/MediaTypeHeaderValue', 'model/MediaTypeMapping', 'model/MotionSensorDto', 'model/NameValueHeaderValue', 'model/NodeDto', 'model/PaginatedListDevicesSearchResultDto', 'model/PolicyDto', 'model/RelayDto', 'model/ScheduleDto', 'model/SpaceDto', 'model/SpaceTimerDto', 'model/SpaceTypeDto', 'model/SwitchDto', 'model/TemperatureSensorDto', 'model/UpdateActionDto', 'model/UpdateActionSetDto', 'model/UpdateApplicationKeyDto', 'model/UpdateDeviceDto', 'model/UpdateDeviceNodeDto', 'model/UpdateDimmerDto', 'model/UpdateLightDto', 'model/UpdateLightSensorDto', 'model/UpdateMotionSensorDto', 'model/UpdateNetworkNodeDto', 'model/UpdatePolicyDto', 'model/UpdateRelayDto', 'model/UpdateScheduleActionSetDto', 'model/UpdateScheduleDto', 'model/UpdateSpaceDto', 'model/UpdateSwitchDto', 'model/UpdateTemperatureSensorDto', 'model/UpdateWebHookDto', 'model/UpdateZoneDto', 'model/UrlHelper', 'model/WebHookDto', 'model/ZoneDto', 'api/ActionSetsApi', 'api/ActionsApi', 'api/ApplicationKeysApi', 'api/DashboardsApi', 'api/DeviceNodesApi', 'api/DevicesApi', 'api/DimmersApi', 'api/HealthApi', 'api/LicensingApi', 'api/LightSensorsApi', 'api/LightsApi', 'api/MotionSensorsApi', 'api/NetworkNodesApi', 'api/PoliciesApi', 'api/RelaysApi', 'api/SchedulesApi', 'api/SpaceTypesApi', 'api/SpacesApi', 'api/SwitchesApi', 'api/TemperatureSensorsApi', 'api/WebHooksApi', 'api/ZonesApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/ActionDto'), require('./model/ActionSetDto'), require('./model/ActivePolicyValueDto'), require('./model/AddDeviceToSpaceDto'), require('./model/AddDeviceToZoneDto'), require('./model/ApplicationKeyDto'), require('./model/BatchLightingDto'), require('./model/BatchLightingListDto'), require('./model/CreateActionDto'), require('./model/CreateActionSetDto'), require('./model/CreateApplicationKeyDto'), require('./model/CreateDeviceNodeDto'), require('./model/CreateDimmerDto'), require('./model/CreateDimmerEventDto'), require('./model/CreateLightDto'), require('./model/CreateLightSensorDto'), require('./model/CreateLightSensorEventDto'), require('./model/CreateMotionSensorDto'), require('./model/CreateMotionSensorEventDto'), require('./model/CreateNetworkNodeDto'), require('./model/CreatePolicyDto'), require('./model/CreateRelayDto'), require('./model/CreateScheduleDto'), require('./model/CreateSpaceDto'), require('./model/CreateSwitchDto'), require('./model/CreateSwitchEventDto'), require('./model/CreateTemperatureSensorDto'), require('./model/CreateTemperatureSensorEventDto'), require('./model/CreateWebHookDto'), require('./model/CreateZoneDto'), require('./model/CreatedAtRouteNegotiatedContentResultActionDto'), require('./model/CreatedAtRouteNegotiatedContentResultActionSetDto'), require('./model/CreatedAtRouteNegotiatedContentResultApplicationKeyDto'), require('./model/CreatedAtRouteNegotiatedContentResultDeviceNodeDto'), require('./model/CreatedAtRouteNegotiatedContentResultDimmerDto'), require('./model/CreatedAtRouteNegotiatedContentResultLightDto'), require('./model/CreatedAtRouteNegotiatedContentResultLightSensorDto'), require('./model/CreatedAtRouteNegotiatedContentResultMotionSensorDto'), require('./model/CreatedAtRouteNegotiatedContentResultNodeDto'), require('./model/CreatedAtRouteNegotiatedContentResultPolicyDto'), require('./model/CreatedAtRouteNegotiatedContentResultScheduleDto'), require('./model/CreatedAtRouteNegotiatedContentResultSpaceDto'), require('./model/CreatedAtRouteNegotiatedContentResultSwitchDto'), require('./model/CreatedAtRouteNegotiatedContentResultTemperatureSensorDto'), require('./model/CreatedAtRouteNegotiatedContentResultWebHookDto'), require('./model/CreatedAtRouteNegotiatedContentResultZoneDto'), require('./model/DashboardDeviceStatusByDeviceTypeDto'), require('./model/DashboardDeviceStatusByNetworkSwitchDto'), require('./model/DashboardDeviceStatusBySpaceDto'), require('./model/DecoderFallback'), require('./model/DeviceDto'), require('./model/DeviceNodeDto'), require('./model/DevicesSearchResultDto'), require('./model/DimmerDto'), require('./model/EmergencyLightingSettingsDto'), require('./model/EncoderFallback'), require('./model/Encoding'), require('./model/EventDto'), require('./model/IContentNegotiator'), require('./model/IRequiredMemberSelector'), require('./model/LightDto'), require('./model/LightSensorDto'), require('./model/LightingDto'), require('./model/ListDtoActionDto'), require('./model/ListDtoActionSetDto'), require('./model/ListDtoActivePolicyValueDto'), require('./model/ListDtoApplicationKeyDto'), require('./model/ListDtoDashboardDeviceStatusByDeviceTypeDto'), require('./model/ListDtoDashboardDeviceStatusByNetworkSwitchDto'), require('./model/ListDtoDashboardDeviceStatusBySpaceDto'), require('./model/ListDtoDeviceDto'), require('./model/ListDtoDeviceNodeDto'), require('./model/ListDtoDimmerDto'), require('./model/ListDtoEventDto'), require('./model/ListDtoLightDto'), require('./model/ListDtoLightSensorDto'), require('./model/ListDtoMotionSensorDto'), require('./model/ListDtoNodeDto'), require('./model/ListDtoPolicyDto'), require('./model/ListDtoRelayDto'), require('./model/ListDtoScheduleDto'), require('./model/ListDtoSpaceDto'), require('./model/ListDtoSpaceTypeDto'), require('./model/ListDtoString'), require('./model/ListDtoSwitchDto'), require('./model/ListDtoTemperatureSensorDto'), require('./model/ListDtoWebHookDto'), require('./model/ListDtoZoneDto'), require('./model/MediaTypeFormatter'), require('./model/MediaTypeHeaderValue'), require('./model/MediaTypeMapping'), require('./model/MotionSensorDto'), require('./model/NameValueHeaderValue'), require('./model/NodeDto'), require('./model/PaginatedListDevicesSearchResultDto'), require('./model/PolicyDto'), require('./model/RelayDto'), require('./model/ScheduleDto'), require('./model/SpaceDto'), require('./model/SpaceTimerDto'), require('./model/SpaceTypeDto'), require('./model/SwitchDto'), require('./model/TemperatureSensorDto'), require('./model/UpdateActionDto'), require('./model/UpdateActionSetDto'), require('./model/UpdateApplicationKeyDto'), require('./model/UpdateDeviceDto'), require('./model/UpdateDeviceNodeDto'), require('./model/UpdateDimmerDto'), require('./model/UpdateLightDto'), require('./model/UpdateLightSensorDto'), require('./model/UpdateMotionSensorDto'), require('./model/UpdateNetworkNodeDto'), require('./model/UpdatePolicyDto'), require('./model/UpdateRelayDto'), require('./model/UpdateScheduleActionSetDto'), require('./model/UpdateScheduleDto'), require('./model/UpdateSpaceDto'), require('./model/UpdateSwitchDto'), require('./model/UpdateTemperatureSensorDto'), require('./model/UpdateWebHookDto'), require('./model/UpdateZoneDto'), require('./model/UrlHelper'), require('./model/WebHookDto'), require('./model/ZoneDto'), require('./api/ActionSetsApi'), require('./api/ActionsApi'), require('./api/ApplicationKeysApi'), require('./api/DashboardsApi'), require('./api/DeviceNodesApi'), require('./api/DevicesApi'), require('./api/DimmersApi'), require('./api/HealthApi'), require('./api/LicensingApi'), require('./api/LightSensorsApi'), require('./api/LightsApi'), require('./api/MotionSensorsApi'), require('./api/NetworkNodesApi'), require('./api/PoliciesApi'), require('./api/RelaysApi'), require('./api/SchedulesApi'), require('./api/SpaceTypesApi'), require('./api/SpacesApi'), require('./api/SwitchesApi'), require('./api/TemperatureSensorsApi'), require('./api/WebHooksApi'), require('./api/ZonesApi'));
  }
}(function(ApiClient, ActionDto, ActionSetDto, ActivePolicyValueDto, AddDeviceToSpaceDto, AddDeviceToZoneDto, ApplicationKeyDto, BatchLightingDto, BatchLightingListDto, CreateActionDto, CreateActionSetDto, CreateApplicationKeyDto, CreateDeviceNodeDto, CreateDimmerDto, CreateDimmerEventDto, CreateLightDto, CreateLightSensorDto, CreateLightSensorEventDto, CreateMotionSensorDto, CreateMotionSensorEventDto, CreateNetworkNodeDto, CreatePolicyDto, CreateRelayDto, CreateScheduleDto, CreateSpaceDto, CreateSwitchDto, CreateSwitchEventDto, CreateTemperatureSensorDto, CreateTemperatureSensorEventDto, CreateWebHookDto, CreateZoneDto, CreatedAtRouteNegotiatedContentResultActionDto, CreatedAtRouteNegotiatedContentResultActionSetDto, CreatedAtRouteNegotiatedContentResultApplicationKeyDto, CreatedAtRouteNegotiatedContentResultDeviceNodeDto, CreatedAtRouteNegotiatedContentResultDimmerDto, CreatedAtRouteNegotiatedContentResultLightDto, CreatedAtRouteNegotiatedContentResultLightSensorDto, CreatedAtRouteNegotiatedContentResultMotionSensorDto, CreatedAtRouteNegotiatedContentResultNodeDto, CreatedAtRouteNegotiatedContentResultPolicyDto, CreatedAtRouteNegotiatedContentResultScheduleDto, CreatedAtRouteNegotiatedContentResultSpaceDto, CreatedAtRouteNegotiatedContentResultSwitchDto, CreatedAtRouteNegotiatedContentResultTemperatureSensorDto, CreatedAtRouteNegotiatedContentResultWebHookDto, CreatedAtRouteNegotiatedContentResultZoneDto, DashboardDeviceStatusByDeviceTypeDto, DashboardDeviceStatusByNetworkSwitchDto, DashboardDeviceStatusBySpaceDto, DecoderFallback, DeviceDto, DeviceNodeDto, DevicesSearchResultDto, DimmerDto, EmergencyLightingSettingsDto, EncoderFallback, Encoding, EventDto, IContentNegotiator, IRequiredMemberSelector, LightDto, LightSensorDto, LightingDto, ListDtoActionDto, ListDtoActionSetDto, ListDtoActivePolicyValueDto, ListDtoApplicationKeyDto, ListDtoDashboardDeviceStatusByDeviceTypeDto, ListDtoDashboardDeviceStatusByNetworkSwitchDto, ListDtoDashboardDeviceStatusBySpaceDto, ListDtoDeviceDto, ListDtoDeviceNodeDto, ListDtoDimmerDto, ListDtoEventDto, ListDtoLightDto, ListDtoLightSensorDto, ListDtoMotionSensorDto, ListDtoNodeDto, ListDtoPolicyDto, ListDtoRelayDto, ListDtoScheduleDto, ListDtoSpaceDto, ListDtoSpaceTypeDto, ListDtoString, ListDtoSwitchDto, ListDtoTemperatureSensorDto, ListDtoWebHookDto, ListDtoZoneDto, MediaTypeFormatter, MediaTypeHeaderValue, MediaTypeMapping, MotionSensorDto, NameValueHeaderValue, NodeDto, PaginatedListDevicesSearchResultDto, PolicyDto, RelayDto, ScheduleDto, SpaceDto, SpaceTimerDto, SpaceTypeDto, SwitchDto, TemperatureSensorDto, UpdateActionDto, UpdateActionSetDto, UpdateApplicationKeyDto, UpdateDeviceDto, UpdateDeviceNodeDto, UpdateDimmerDto, UpdateLightDto, UpdateLightSensorDto, UpdateMotionSensorDto, UpdateNetworkNodeDto, UpdatePolicyDto, UpdateRelayDto, UpdateScheduleActionSetDto, UpdateScheduleDto, UpdateSpaceDto, UpdateSwitchDto, UpdateTemperatureSensorDto, UpdateWebHookDto, UpdateZoneDto, UrlHelper, WebHookDto, ZoneDto, ActionSetsApi, ActionsApi, ApplicationKeysApi, DashboardsApi, DeviceNodesApi, DevicesApi, DimmersApi, HealthApi, LicensingApi, LightSensorsApi, LightsApi, MotionSensorsApi, NetworkNodesApi, PoliciesApi, RelaysApi, SchedulesApi, SpaceTypesApi, SpacesApi, SwitchesApi, TemperatureSensorsApi, WebHooksApi, ZonesApi) {
  'use strict';

  /**
   * ERROR_UNKNOWN.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var GatewaySoftwareApi = require('index'); // See note below*.
   * var xxxSvc = new GatewaySoftwareApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new GatewaySoftwareApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new GatewaySoftwareApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new GatewaySoftwareApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version v1
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The ActionDto model constructor.
     * @property {module:model/ActionDto}
     */
    ActionDto: ActionDto,
    /**
     * The ActionSetDto model constructor.
     * @property {module:model/ActionSetDto}
     */
    ActionSetDto: ActionSetDto,
    /**
     * The ActivePolicyValueDto model constructor.
     * @property {module:model/ActivePolicyValueDto}
     */
    ActivePolicyValueDto: ActivePolicyValueDto,
    /**
     * The AddDeviceToSpaceDto model constructor.
     * @property {module:model/AddDeviceToSpaceDto}
     */
    AddDeviceToSpaceDto: AddDeviceToSpaceDto,
    /**
     * The AddDeviceToZoneDto model constructor.
     * @property {module:model/AddDeviceToZoneDto}
     */
    AddDeviceToZoneDto: AddDeviceToZoneDto,
    /**
     * The ApplicationKeyDto model constructor.
     * @property {module:model/ApplicationKeyDto}
     */
    ApplicationKeyDto: ApplicationKeyDto,
    /**
     * The BatchLightingDto model constructor.
     * @property {module:model/BatchLightingDto}
     */
    BatchLightingDto: BatchLightingDto,
    /**
     * The BatchLightingListDto model constructor.
     * @property {module:model/BatchLightingListDto}
     */
    BatchLightingListDto: BatchLightingListDto,
    /**
     * The CreateActionDto model constructor.
     * @property {module:model/CreateActionDto}
     */
    CreateActionDto: CreateActionDto,
    /**
     * The CreateActionSetDto model constructor.
     * @property {module:model/CreateActionSetDto}
     */
    CreateActionSetDto: CreateActionSetDto,
    /**
     * The CreateApplicationKeyDto model constructor.
     * @property {module:model/CreateApplicationKeyDto}
     */
    CreateApplicationKeyDto: CreateApplicationKeyDto,
    /**
     * The CreateDeviceNodeDto model constructor.
     * @property {module:model/CreateDeviceNodeDto}
     */
    CreateDeviceNodeDto: CreateDeviceNodeDto,
    /**
     * The CreateDimmerDto model constructor.
     * @property {module:model/CreateDimmerDto}
     */
    CreateDimmerDto: CreateDimmerDto,
    /**
     * The CreateDimmerEventDto model constructor.
     * @property {module:model/CreateDimmerEventDto}
     */
    CreateDimmerEventDto: CreateDimmerEventDto,
    /**
     * The CreateLightDto model constructor.
     * @property {module:model/CreateLightDto}
     */
    CreateLightDto: CreateLightDto,
    /**
     * The CreateLightSensorDto model constructor.
     * @property {module:model/CreateLightSensorDto}
     */
    CreateLightSensorDto: CreateLightSensorDto,
    /**
     * The CreateLightSensorEventDto model constructor.
     * @property {module:model/CreateLightSensorEventDto}
     */
    CreateLightSensorEventDto: CreateLightSensorEventDto,
    /**
     * The CreateMotionSensorDto model constructor.
     * @property {module:model/CreateMotionSensorDto}
     */
    CreateMotionSensorDto: CreateMotionSensorDto,
    /**
     * The CreateMotionSensorEventDto model constructor.
     * @property {module:model/CreateMotionSensorEventDto}
     */
    CreateMotionSensorEventDto: CreateMotionSensorEventDto,
    /**
     * The CreateNetworkNodeDto model constructor.
     * @property {module:model/CreateNetworkNodeDto}
     */
    CreateNetworkNodeDto: CreateNetworkNodeDto,
    /**
     * The CreatePolicyDto model constructor.
     * @property {module:model/CreatePolicyDto}
     */
    CreatePolicyDto: CreatePolicyDto,
    /**
     * The CreateRelayDto model constructor.
     * @property {module:model/CreateRelayDto}
     */
    CreateRelayDto: CreateRelayDto,
    /**
     * The CreateScheduleDto model constructor.
     * @property {module:model/CreateScheduleDto}
     */
    CreateScheduleDto: CreateScheduleDto,
    /**
     * The CreateSpaceDto model constructor.
     * @property {module:model/CreateSpaceDto}
     */
    CreateSpaceDto: CreateSpaceDto,
    /**
     * The CreateSwitchDto model constructor.
     * @property {module:model/CreateSwitchDto}
     */
    CreateSwitchDto: CreateSwitchDto,
    /**
     * The CreateSwitchEventDto model constructor.
     * @property {module:model/CreateSwitchEventDto}
     */
    CreateSwitchEventDto: CreateSwitchEventDto,
    /**
     * The CreateTemperatureSensorDto model constructor.
     * @property {module:model/CreateTemperatureSensorDto}
     */
    CreateTemperatureSensorDto: CreateTemperatureSensorDto,
    /**
     * The CreateTemperatureSensorEventDto model constructor.
     * @property {module:model/CreateTemperatureSensorEventDto}
     */
    CreateTemperatureSensorEventDto: CreateTemperatureSensorEventDto,
    /**
     * The CreateWebHookDto model constructor.
     * @property {module:model/CreateWebHookDto}
     */
    CreateWebHookDto: CreateWebHookDto,
    /**
     * The CreateZoneDto model constructor.
     * @property {module:model/CreateZoneDto}
     */
    CreateZoneDto: CreateZoneDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultActionDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultActionDto}
     */
    CreatedAtRouteNegotiatedContentResultActionDto: CreatedAtRouteNegotiatedContentResultActionDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultActionSetDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultActionSetDto}
     */
    CreatedAtRouteNegotiatedContentResultActionSetDto: CreatedAtRouteNegotiatedContentResultActionSetDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultApplicationKeyDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultApplicationKeyDto}
     */
    CreatedAtRouteNegotiatedContentResultApplicationKeyDto: CreatedAtRouteNegotiatedContentResultApplicationKeyDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultDeviceNodeDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultDeviceNodeDto}
     */
    CreatedAtRouteNegotiatedContentResultDeviceNodeDto: CreatedAtRouteNegotiatedContentResultDeviceNodeDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultDimmerDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultDimmerDto}
     */
    CreatedAtRouteNegotiatedContentResultDimmerDto: CreatedAtRouteNegotiatedContentResultDimmerDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultLightDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultLightDto}
     */
    CreatedAtRouteNegotiatedContentResultLightDto: CreatedAtRouteNegotiatedContentResultLightDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultLightSensorDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultLightSensorDto}
     */
    CreatedAtRouteNegotiatedContentResultLightSensorDto: CreatedAtRouteNegotiatedContentResultLightSensorDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultMotionSensorDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultMotionSensorDto}
     */
    CreatedAtRouteNegotiatedContentResultMotionSensorDto: CreatedAtRouteNegotiatedContentResultMotionSensorDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultNodeDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultNodeDto}
     */
    CreatedAtRouteNegotiatedContentResultNodeDto: CreatedAtRouteNegotiatedContentResultNodeDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultPolicyDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultPolicyDto}
     */
    CreatedAtRouteNegotiatedContentResultPolicyDto: CreatedAtRouteNegotiatedContentResultPolicyDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultScheduleDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultScheduleDto}
     */
    CreatedAtRouteNegotiatedContentResultScheduleDto: CreatedAtRouteNegotiatedContentResultScheduleDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultSpaceDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultSpaceDto}
     */
    CreatedAtRouteNegotiatedContentResultSpaceDto: CreatedAtRouteNegotiatedContentResultSpaceDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultSwitchDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultSwitchDto}
     */
    CreatedAtRouteNegotiatedContentResultSwitchDto: CreatedAtRouteNegotiatedContentResultSwitchDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultTemperatureSensorDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultTemperatureSensorDto}
     */
    CreatedAtRouteNegotiatedContentResultTemperatureSensorDto: CreatedAtRouteNegotiatedContentResultTemperatureSensorDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultWebHookDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultWebHookDto}
     */
    CreatedAtRouteNegotiatedContentResultWebHookDto: CreatedAtRouteNegotiatedContentResultWebHookDto,
    /**
     * The CreatedAtRouteNegotiatedContentResultZoneDto model constructor.
     * @property {module:model/CreatedAtRouteNegotiatedContentResultZoneDto}
     */
    CreatedAtRouteNegotiatedContentResultZoneDto: CreatedAtRouteNegotiatedContentResultZoneDto,
    /**
     * The DashboardDeviceStatusByDeviceTypeDto model constructor.
     * @property {module:model/DashboardDeviceStatusByDeviceTypeDto}
     */
    DashboardDeviceStatusByDeviceTypeDto: DashboardDeviceStatusByDeviceTypeDto,
    /**
     * The DashboardDeviceStatusByNetworkSwitchDto model constructor.
     * @property {module:model/DashboardDeviceStatusByNetworkSwitchDto}
     */
    DashboardDeviceStatusByNetworkSwitchDto: DashboardDeviceStatusByNetworkSwitchDto,
    /**
     * The DashboardDeviceStatusBySpaceDto model constructor.
     * @property {module:model/DashboardDeviceStatusBySpaceDto}
     */
    DashboardDeviceStatusBySpaceDto: DashboardDeviceStatusBySpaceDto,
    /**
     * The DecoderFallback model constructor.
     * @property {module:model/DecoderFallback}
     */
    DecoderFallback: DecoderFallback,
    /**
     * The DeviceDto model constructor.
     * @property {module:model/DeviceDto}
     */
    DeviceDto: DeviceDto,
    /**
     * The DeviceNodeDto model constructor.
     * @property {module:model/DeviceNodeDto}
     */
    DeviceNodeDto: DeviceNodeDto,
    /**
     * The DevicesSearchResultDto model constructor.
     * @property {module:model/DevicesSearchResultDto}
     */
    DevicesSearchResultDto: DevicesSearchResultDto,
    /**
     * The DimmerDto model constructor.
     * @property {module:model/DimmerDto}
     */
    DimmerDto: DimmerDto,
    /**
     * The EmergencyLightingSettingsDto model constructor.
     * @property {module:model/EmergencyLightingSettingsDto}
     */
    EmergencyLightingSettingsDto: EmergencyLightingSettingsDto,
    /**
     * The EncoderFallback model constructor.
     * @property {module:model/EncoderFallback}
     */
    EncoderFallback: EncoderFallback,
    /**
     * The Encoding model constructor.
     * @property {module:model/Encoding}
     */
    Encoding: Encoding,
    /**
     * The EventDto model constructor.
     * @property {module:model/EventDto}
     */
    EventDto: EventDto,
    /**
     * The IContentNegotiator model constructor.
     * @property {module:model/IContentNegotiator}
     */
    IContentNegotiator: IContentNegotiator,
    /**
     * The IRequiredMemberSelector model constructor.
     * @property {module:model/IRequiredMemberSelector}
     */
    IRequiredMemberSelector: IRequiredMemberSelector,
    /**
     * The LightDto model constructor.
     * @property {module:model/LightDto}
     */
    LightDto: LightDto,
    /**
     * The LightSensorDto model constructor.
     * @property {module:model/LightSensorDto}
     */
    LightSensorDto: LightSensorDto,
    /**
     * The LightingDto model constructor.
     * @property {module:model/LightingDto}
     */
    LightingDto: LightingDto,
    /**
     * The ListDtoActionDto model constructor.
     * @property {module:model/ListDtoActionDto}
     */
    ListDtoActionDto: ListDtoActionDto,
    /**
     * The ListDtoActionSetDto model constructor.
     * @property {module:model/ListDtoActionSetDto}
     */
    ListDtoActionSetDto: ListDtoActionSetDto,
    /**
     * The ListDtoActivePolicyValueDto model constructor.
     * @property {module:model/ListDtoActivePolicyValueDto}
     */
    ListDtoActivePolicyValueDto: ListDtoActivePolicyValueDto,
    /**
     * The ListDtoApplicationKeyDto model constructor.
     * @property {module:model/ListDtoApplicationKeyDto}
     */
    ListDtoApplicationKeyDto: ListDtoApplicationKeyDto,
    /**
     * The ListDtoDashboardDeviceStatusByDeviceTypeDto model constructor.
     * @property {module:model/ListDtoDashboardDeviceStatusByDeviceTypeDto}
     */
    ListDtoDashboardDeviceStatusByDeviceTypeDto: ListDtoDashboardDeviceStatusByDeviceTypeDto,
    /**
     * The ListDtoDashboardDeviceStatusByNetworkSwitchDto model constructor.
     * @property {module:model/ListDtoDashboardDeviceStatusByNetworkSwitchDto}
     */
    ListDtoDashboardDeviceStatusByNetworkSwitchDto: ListDtoDashboardDeviceStatusByNetworkSwitchDto,
    /**
     * The ListDtoDashboardDeviceStatusBySpaceDto model constructor.
     * @property {module:model/ListDtoDashboardDeviceStatusBySpaceDto}
     */
    ListDtoDashboardDeviceStatusBySpaceDto: ListDtoDashboardDeviceStatusBySpaceDto,
    /**
     * The ListDtoDeviceDto model constructor.
     * @property {module:model/ListDtoDeviceDto}
     */
    ListDtoDeviceDto: ListDtoDeviceDto,
    /**
     * The ListDtoDeviceNodeDto model constructor.
     * @property {module:model/ListDtoDeviceNodeDto}
     */
    ListDtoDeviceNodeDto: ListDtoDeviceNodeDto,
    /**
     * The ListDtoDimmerDto model constructor.
     * @property {module:model/ListDtoDimmerDto}
     */
    ListDtoDimmerDto: ListDtoDimmerDto,
    /**
     * The ListDtoEventDto model constructor.
     * @property {module:model/ListDtoEventDto}
     */
    ListDtoEventDto: ListDtoEventDto,
    /**
     * The ListDtoLightDto model constructor.
     * @property {module:model/ListDtoLightDto}
     */
    ListDtoLightDto: ListDtoLightDto,
    /**
     * The ListDtoLightSensorDto model constructor.
     * @property {module:model/ListDtoLightSensorDto}
     */
    ListDtoLightSensorDto: ListDtoLightSensorDto,
    /**
     * The ListDtoMotionSensorDto model constructor.
     * @property {module:model/ListDtoMotionSensorDto}
     */
    ListDtoMotionSensorDto: ListDtoMotionSensorDto,
    /**
     * The ListDtoNodeDto model constructor.
     * @property {module:model/ListDtoNodeDto}
     */
    ListDtoNodeDto: ListDtoNodeDto,
    /**
     * The ListDtoPolicyDto model constructor.
     * @property {module:model/ListDtoPolicyDto}
     */
    ListDtoPolicyDto: ListDtoPolicyDto,
    /**
     * The ListDtoRelayDto model constructor.
     * @property {module:model/ListDtoRelayDto}
     */
    ListDtoRelayDto: ListDtoRelayDto,
    /**
     * The ListDtoScheduleDto model constructor.
     * @property {module:model/ListDtoScheduleDto}
     */
    ListDtoScheduleDto: ListDtoScheduleDto,
    /**
     * The ListDtoSpaceDto model constructor.
     * @property {module:model/ListDtoSpaceDto}
     */
    ListDtoSpaceDto: ListDtoSpaceDto,
    /**
     * The ListDtoSpaceTypeDto model constructor.
     * @property {module:model/ListDtoSpaceTypeDto}
     */
    ListDtoSpaceTypeDto: ListDtoSpaceTypeDto,
    /**
     * The ListDtoString model constructor.
     * @property {module:model/ListDtoString}
     */
    ListDtoString: ListDtoString,
    /**
     * The ListDtoSwitchDto model constructor.
     * @property {module:model/ListDtoSwitchDto}
     */
    ListDtoSwitchDto: ListDtoSwitchDto,
    /**
     * The ListDtoTemperatureSensorDto model constructor.
     * @property {module:model/ListDtoTemperatureSensorDto}
     */
    ListDtoTemperatureSensorDto: ListDtoTemperatureSensorDto,
    /**
     * The ListDtoWebHookDto model constructor.
     * @property {module:model/ListDtoWebHookDto}
     */
    ListDtoWebHookDto: ListDtoWebHookDto,
    /**
     * The ListDtoZoneDto model constructor.
     * @property {module:model/ListDtoZoneDto}
     */
    ListDtoZoneDto: ListDtoZoneDto,
    /**
     * The MediaTypeFormatter model constructor.
     * @property {module:model/MediaTypeFormatter}
     */
    MediaTypeFormatter: MediaTypeFormatter,
    /**
     * The MediaTypeHeaderValue model constructor.
     * @property {module:model/MediaTypeHeaderValue}
     */
    MediaTypeHeaderValue: MediaTypeHeaderValue,
    /**
     * The MediaTypeMapping model constructor.
     * @property {module:model/MediaTypeMapping}
     */
    MediaTypeMapping: MediaTypeMapping,
    /**
     * The MotionSensorDto model constructor.
     * @property {module:model/MotionSensorDto}
     */
    MotionSensorDto: MotionSensorDto,
    /**
     * The NameValueHeaderValue model constructor.
     * @property {module:model/NameValueHeaderValue}
     */
    NameValueHeaderValue: NameValueHeaderValue,
    /**
     * The NodeDto model constructor.
     * @property {module:model/NodeDto}
     */
    NodeDto: NodeDto,
    /**
     * The PaginatedListDevicesSearchResultDto model constructor.
     * @property {module:model/PaginatedListDevicesSearchResultDto}
     */
    PaginatedListDevicesSearchResultDto: PaginatedListDevicesSearchResultDto,
    /**
     * The PolicyDto model constructor.
     * @property {module:model/PolicyDto}
     */
    PolicyDto: PolicyDto,
    /**
     * The RelayDto model constructor.
     * @property {module:model/RelayDto}
     */
    RelayDto: RelayDto,
    /**
     * The ScheduleDto model constructor.
     * @property {module:model/ScheduleDto}
     */
    ScheduleDto: ScheduleDto,
    /**
     * The SpaceDto model constructor.
     * @property {module:model/SpaceDto}
     */
    SpaceDto: SpaceDto,
    /**
     * The SpaceTimerDto model constructor.
     * @property {module:model/SpaceTimerDto}
     */
    SpaceTimerDto: SpaceTimerDto,
    /**
     * The SpaceTypeDto model constructor.
     * @property {module:model/SpaceTypeDto}
     */
    SpaceTypeDto: SpaceTypeDto,
    /**
     * The SwitchDto model constructor.
     * @property {module:model/SwitchDto}
     */
    SwitchDto: SwitchDto,
    /**
     * The TemperatureSensorDto model constructor.
     * @property {module:model/TemperatureSensorDto}
     */
    TemperatureSensorDto: TemperatureSensorDto,
    /**
     * The UpdateActionDto model constructor.
     * @property {module:model/UpdateActionDto}
     */
    UpdateActionDto: UpdateActionDto,
    /**
     * The UpdateActionSetDto model constructor.
     * @property {module:model/UpdateActionSetDto}
     */
    UpdateActionSetDto: UpdateActionSetDto,
    /**
     * The UpdateApplicationKeyDto model constructor.
     * @property {module:model/UpdateApplicationKeyDto}
     */
    UpdateApplicationKeyDto: UpdateApplicationKeyDto,
    /**
     * The UpdateDeviceDto model constructor.
     * @property {module:model/UpdateDeviceDto}
     */
    UpdateDeviceDto: UpdateDeviceDto,
    /**
     * The UpdateDeviceNodeDto model constructor.
     * @property {module:model/UpdateDeviceNodeDto}
     */
    UpdateDeviceNodeDto: UpdateDeviceNodeDto,
    /**
     * The UpdateDimmerDto model constructor.
     * @property {module:model/UpdateDimmerDto}
     */
    UpdateDimmerDto: UpdateDimmerDto,
    /**
     * The UpdateLightDto model constructor.
     * @property {module:model/UpdateLightDto}
     */
    UpdateLightDto: UpdateLightDto,
    /**
     * The UpdateLightSensorDto model constructor.
     * @property {module:model/UpdateLightSensorDto}
     */
    UpdateLightSensorDto: UpdateLightSensorDto,
    /**
     * The UpdateMotionSensorDto model constructor.
     * @property {module:model/UpdateMotionSensorDto}
     */
    UpdateMotionSensorDto: UpdateMotionSensorDto,
    /**
     * The UpdateNetworkNodeDto model constructor.
     * @property {module:model/UpdateNetworkNodeDto}
     */
    UpdateNetworkNodeDto: UpdateNetworkNodeDto,
    /**
     * The UpdatePolicyDto model constructor.
     * @property {module:model/UpdatePolicyDto}
     */
    UpdatePolicyDto: UpdatePolicyDto,
    /**
     * The UpdateRelayDto model constructor.
     * @property {module:model/UpdateRelayDto}
     */
    UpdateRelayDto: UpdateRelayDto,
    /**
     * The UpdateScheduleActionSetDto model constructor.
     * @property {module:model/UpdateScheduleActionSetDto}
     */
    UpdateScheduleActionSetDto: UpdateScheduleActionSetDto,
    /**
     * The UpdateScheduleDto model constructor.
     * @property {module:model/UpdateScheduleDto}
     */
    UpdateScheduleDto: UpdateScheduleDto,
    /**
     * The UpdateSpaceDto model constructor.
     * @property {module:model/UpdateSpaceDto}
     */
    UpdateSpaceDto: UpdateSpaceDto,
    /**
     * The UpdateSwitchDto model constructor.
     * @property {module:model/UpdateSwitchDto}
     */
    UpdateSwitchDto: UpdateSwitchDto,
    /**
     * The UpdateTemperatureSensorDto model constructor.
     * @property {module:model/UpdateTemperatureSensorDto}
     */
    UpdateTemperatureSensorDto: UpdateTemperatureSensorDto,
    /**
     * The UpdateWebHookDto model constructor.
     * @property {module:model/UpdateWebHookDto}
     */
    UpdateWebHookDto: UpdateWebHookDto,
    /**
     * The UpdateZoneDto model constructor.
     * @property {module:model/UpdateZoneDto}
     */
    UpdateZoneDto: UpdateZoneDto,
    /**
     * The UrlHelper model constructor.
     * @property {module:model/UrlHelper}
     */
    UrlHelper: UrlHelper,
    /**
     * The WebHookDto model constructor.
     * @property {module:model/WebHookDto}
     */
    WebHookDto: WebHookDto,
    /**
     * The ZoneDto model constructor.
     * @property {module:model/ZoneDto}
     */
    ZoneDto: ZoneDto,
    /**
     * The ActionSetsApi service constructor.
     * @property {module:api/ActionSetsApi}
     */
    ActionSetsApi: ActionSetsApi,
    /**
     * The ActionsApi service constructor.
     * @property {module:api/ActionsApi}
     */
    ActionsApi: ActionsApi,
    /**
     * The ApplicationKeysApi service constructor.
     * @property {module:api/ApplicationKeysApi}
     */
    ApplicationKeysApi: ApplicationKeysApi,
    /**
     * The DashboardsApi service constructor.
     * @property {module:api/DashboardsApi}
     */
    DashboardsApi: DashboardsApi,
    /**
     * The DeviceNodesApi service constructor.
     * @property {module:api/DeviceNodesApi}
     */
    DeviceNodesApi: DeviceNodesApi,
    /**
     * The DevicesApi service constructor.
     * @property {module:api/DevicesApi}
     */
    DevicesApi: DevicesApi,
    /**
     * The DimmersApi service constructor.
     * @property {module:api/DimmersApi}
     */
    DimmersApi: DimmersApi,
    /**
     * The HealthApi service constructor.
     * @property {module:api/HealthApi}
     */
    HealthApi: HealthApi,
    /**
     * The LicensingApi service constructor.
     * @property {module:api/LicensingApi}
     */
    LicensingApi: LicensingApi,
    /**
     * The LightSensorsApi service constructor.
     * @property {module:api/LightSensorsApi}
     */
    LightSensorsApi: LightSensorsApi,
    /**
     * The LightsApi service constructor.
     * @property {module:api/LightsApi}
     */
    LightsApi: LightsApi,
    /**
     * The MotionSensorsApi service constructor.
     * @property {module:api/MotionSensorsApi}
     */
    MotionSensorsApi: MotionSensorsApi,
    /**
     * The NetworkNodesApi service constructor.
     * @property {module:api/NetworkNodesApi}
     */
    NetworkNodesApi: NetworkNodesApi,
    /**
     * The PoliciesApi service constructor.
     * @property {module:api/PoliciesApi}
     */
    PoliciesApi: PoliciesApi,
    /**
     * The RelaysApi service constructor.
     * @property {module:api/RelaysApi}
     */
    RelaysApi: RelaysApi,
    /**
     * The SchedulesApi service constructor.
     * @property {module:api/SchedulesApi}
     */
    SchedulesApi: SchedulesApi,
    /**
     * The SpaceTypesApi service constructor.
     * @property {module:api/SpaceTypesApi}
     */
    SpaceTypesApi: SpaceTypesApi,
    /**
     * The SpacesApi service constructor.
     * @property {module:api/SpacesApi}
     */
    SpacesApi: SpacesApi,
    /**
     * The SwitchesApi service constructor.
     * @property {module:api/SwitchesApi}
     */
    SwitchesApi: SwitchesApi,
    /**
     * The TemperatureSensorsApi service constructor.
     * @property {module:api/TemperatureSensorsApi}
     */
    TemperatureSensorsApi: TemperatureSensorsApi,
    /**
     * The WebHooksApi service constructor.
     * @property {module:api/WebHooksApi}
     */
    WebHooksApi: WebHooksApi,
    /**
     * The ZonesApi service constructor.
     * @property {module:api/ZonesApi}
     */
    ZonesApi: ZonesApi
  };

  return exports;
}));
