/**
 * Gateway Software API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Encoding', 'model/IRequiredMemberSelector', 'model/MediaTypeHeaderValue', 'model/MediaTypeMapping'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Encoding'), require('./IRequiredMemberSelector'), require('./MediaTypeHeaderValue'), require('./MediaTypeMapping'));
  } else {
    // Browser globals (root is window)
    if (!root.GatewaySoftwareApi) {
      root.GatewaySoftwareApi = {};
    }
    root.GatewaySoftwareApi.MediaTypeFormatter = factory(root.GatewaySoftwareApi.ApiClient, root.GatewaySoftwareApi.Encoding, root.GatewaySoftwareApi.IRequiredMemberSelector, root.GatewaySoftwareApi.MediaTypeHeaderValue, root.GatewaySoftwareApi.MediaTypeMapping);
  }
}(this, function(ApiClient, Encoding, IRequiredMemberSelector, MediaTypeHeaderValue, MediaTypeMapping) {
  'use strict';




  /**
   * The MediaTypeFormatter model module.
   * @module model/MediaTypeFormatter
   * @version v1
   */

  /**
   * Constructs a new <code>MediaTypeFormatter</code>.
   * @alias module:model/MediaTypeFormatter
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>MediaTypeFormatter</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MediaTypeFormatter} obj Optional instance to populate.
   * @return {module:model/MediaTypeFormatter} The populated <code>MediaTypeFormatter</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('supportedMediaTypes')) {
        obj['supportedMediaTypes'] = ApiClient.convertToType(data['supportedMediaTypes'], [MediaTypeHeaderValue]);
      }
      if (data.hasOwnProperty('supportedEncodings')) {
        obj['supportedEncodings'] = ApiClient.convertToType(data['supportedEncodings'], [Encoding]);
      }
      if (data.hasOwnProperty('mediaTypeMappings')) {
        obj['mediaTypeMappings'] = ApiClient.convertToType(data['mediaTypeMappings'], [MediaTypeMapping]);
      }
      if (data.hasOwnProperty('requiredMemberSelector')) {
        obj['requiredMemberSelector'] = IRequiredMemberSelector.constructFromObject(data['requiredMemberSelector']);
      }
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/MediaTypeHeaderValue>} supportedMediaTypes
   */
  exports.prototype['supportedMediaTypes'] = undefined;
  /**
   * @member {Array.<module:model/Encoding>} supportedEncodings
   */
  exports.prototype['supportedEncodings'] = undefined;
  /**
   * @member {Array.<module:model/MediaTypeMapping>} mediaTypeMappings
   */
  exports.prototype['mediaTypeMappings'] = undefined;
  /**
   * @member {module:model/IRequiredMemberSelector} requiredMemberSelector
   */
  exports.prototype['requiredMemberSelector'] = undefined;



  return exports;
}));


