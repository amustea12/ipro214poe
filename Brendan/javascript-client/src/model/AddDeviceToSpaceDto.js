/**
 * Gateway Software API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GatewaySoftwareApi) {
      root.GatewaySoftwareApi = {};
    }
    root.GatewaySoftwareApi.AddDeviceToSpaceDto = factory(root.GatewaySoftwareApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AddDeviceToSpaceDto model module.
   * @module model/AddDeviceToSpaceDto
   * @version v1
   */

  /**
   * Constructs a new <code>AddDeviceToSpaceDto</code>.
   * The device
   * @alias module:model/AddDeviceToSpaceDto
   * @class
   * @param deviceId {Number} The device ID
   * @param deviceType {module:model/AddDeviceToSpaceDto.DeviceTypeEnum} The device type
   * @param includeAttachedDevices {module:model/AddDeviceToSpaceDto.IncludeAttachedDevicesEnum} Specifies whether other attached devices should also be added to the space
   */
  var exports = function(deviceId, deviceType, includeAttachedDevices) {
    var _this = this;

    _this['deviceId'] = deviceId;
    _this['deviceType'] = deviceType;
    _this['includeAttachedDevices'] = includeAttachedDevices;
  };

  /**
   * Constructs a <code>AddDeviceToSpaceDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AddDeviceToSpaceDto} obj Optional instance to populate.
   * @return {module:model/AddDeviceToSpaceDto} The populated <code>AddDeviceToSpaceDto</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('deviceId')) {
        obj['deviceId'] = ApiClient.convertToType(data['deviceId'], 'Number');
      }
      if (data.hasOwnProperty('deviceType')) {
        obj['deviceType'] = ApiClient.convertToType(data['deviceType'], 'String');
      }
      if (data.hasOwnProperty('includeAttachedDevices')) {
        obj['includeAttachedDevices'] = ApiClient.convertToType(data['includeAttachedDevices'], 'String');
      }
    }
    return obj;
  }

  /**
   * The device ID
   * @member {Number} deviceId
   */
  exports.prototype['deviceId'] = undefined;
  /**
   * The device type
   * @member {module:model/AddDeviceToSpaceDto.DeviceTypeEnum} deviceType
   */
  exports.prototype['deviceType'] = undefined;
  /**
   * Specifies whether other attached devices should also be added to the space
   * @member {module:model/AddDeviceToSpaceDto.IncludeAttachedDevicesEnum} includeAttachedDevices
   */
  exports.prototype['includeAttachedDevices'] = undefined;


  /**
   * Allowed values for the <code>deviceType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DeviceTypeEnum = {
    /**
     * value: "Light"
     * @const
     */
    "Light": "Light",
    /**
     * value: "Switch"
     * @const
     */
    "Switch": "Switch",
    /**
     * value: "Dimmer"
     * @const
     */
    "Dimmer": "Dimmer",
    /**
     * value: "MotionSensor"
     * @const
     */
    "MotionSensor": "MotionSensor",
    /**
     * value: "LightSensor"
     * @const
     */
    "LightSensor": "LightSensor",
    /**
     * value: "TemperatureSensor"
     * @const
     */
    "TemperatureSensor": "TemperatureSensor",
    /**
     * value: "Relay"
     * @const
     */
    "Relay": "Relay"  };

  /**
   * Allowed values for the <code>includeAttachedDevices</code> property.
   * @enum {String}
   * @readonly
   */
  exports.IncludeAttachedDevicesEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "AllOnNode"
     * @const
     */
    "AllOnNode": "AllOnNode",
    /**
     * value: "AllOnChain"
     * @const
     */
    "AllOnChain": "AllOnChain"  };


  return exports;
}));


