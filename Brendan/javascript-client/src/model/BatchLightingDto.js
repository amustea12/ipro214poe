/**
 * Gateway Software API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.GatewaySoftwareApi) {
      root.GatewaySoftwareApi = {};
    }
    root.GatewaySoftwareApi.BatchLightingDto = factory(root.GatewaySoftwareApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The BatchLightingDto model module.
   * @module model/BatchLightingDto
   * @version v1
   */

  /**
   * Constructs a new <code>BatchLightingDto</code>.
   * @alias module:model/BatchLightingDto
   * @class
   */
  var exports = function() {
    var _this = this;







  };

  /**
   * Constructs a <code>BatchLightingDto</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BatchLightingDto} obj Optional instance to populate.
   * @return {module:model/BatchLightingDto} The populated <code>BatchLightingDto</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('level')) {
        obj['level'] = ApiClient.convertToType(data['level'], 'Number');
      }
      if (data.hasOwnProperty('kelvin')) {
        obj['kelvin'] = ApiClient.convertToType(data['kelvin'], 'Number');
      }
      if (data.hasOwnProperty('behavior')) {
        obj['behavior'] = ApiClient.convertToType(data['behavior'], 'String');
      }
      if (data.hasOwnProperty('curveType')) {
        obj['curveType'] = ApiClient.convertToType(data['curveType'], 'String');
      }
      if (data.hasOwnProperty('duration')) {
        obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
      }
    }
    return obj;
  }

  /**
   * The light ID
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The lighting level
   * @member {Number} level
   */
  exports.prototype['level'] = undefined;
  /**
   * The color temperature of the lighitng in Kelvin
   * @member {Number} kelvin
   */
  exports.prototype['kelvin'] = undefined;
  /**
   * The smooth ramp behavior
   * @member {module:model/BatchLightingDto.BehaviorEnum} behavior
   */
  exports.prototype['behavior'] = undefined;
  /**
   * The smooth ramp curve type
   * @member {module:model/BatchLightingDto.CurveTypeEnum} curveType
   */
  exports.prototype['curveType'] = undefined;
  /**
   * The smooth ramp duration in milliseconds
   * @member {Number} duration
   */
  exports.prototype['duration'] = undefined;


  /**
   * Allowed values for the <code>behavior</code> property.
   * @enum {String}
   * @readonly
   */
  exports.BehaviorEnum = {
    /**
     * value: "ConstantDuration"
     * @const
     */
    "ConstantDuration": "ConstantDuration",
    /**
     * value: "Variable"
     * @const
     */
    "Variable": "Variable",
    /**
     * value: "ConstantRate"
     * @const
     */
    "ConstantRate": "ConstantRate"  };

  /**
   * Allowed values for the <code>curveType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CurveTypeEnum = {
    /**
     * value: "None"
     * @const
     */
    "None": "None",
    /**
     * value: "Linear"
     * @const
     */
    "Linear": "Linear",
    /**
     * value: "SquareLaw"
     * @const
     */
    "SquareLaw": "SquareLaw",
    /**
     * value: "Dali"
     * @const
     */
    "Dali": "Dali"  };


  return exports;
}));


