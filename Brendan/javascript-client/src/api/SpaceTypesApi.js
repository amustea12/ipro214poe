/**
 * Gateway Software API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ListDtoSpaceTypeDto', 'model/PolicyDto', 'model/SpaceTypeDto'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ListDtoSpaceTypeDto'), require('../model/PolicyDto'), require('../model/SpaceTypeDto'));
  } else {
    // Browser globals (root is window)
    if (!root.GatewaySoftwareApi) {
      root.GatewaySoftwareApi = {};
    }
    root.GatewaySoftwareApi.SpaceTypesApi = factory(root.GatewaySoftwareApi.ApiClient, root.GatewaySoftwareApi.ListDtoSpaceTypeDto, root.GatewaySoftwareApi.PolicyDto, root.GatewaySoftwareApi.SpaceTypeDto);
  }
}(this, function(ApiClient, ListDtoSpaceTypeDto, PolicyDto, SpaceTypeDto) {
  'use strict';

  /**
   * SpaceTypes service.
   * @module api/SpaceTypesApi
   * @version v1
   */

  /**
   * Constructs a new SpaceTypesApi. 
   * @alias module:api/SpaceTypesApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the spaceTypesGet operation.
     * @callback module:api/SpaceTypesApi~spaceTypesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ListDtoSpaceTypeDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of space types in the system
     * @param {module:api/SpaceTypesApi~spaceTypesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ListDtoSpaceTypeDto}
     */
    this.spaceTypesGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = ListDtoSpaceTypeDto;

      return this.apiClient.callApi(
        '/spacetypes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the spaceTypesGetPolicy operation.
     * @callback module:api/SpaceTypesApi~spaceTypesGetPolicyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PolicyDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the policy of a space type
     * @param {Number} id the ID of the space type
     * @param {module:api/SpaceTypesApi~spaceTypesGetPolicyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PolicyDto}
     */
    this.spaceTypesGetPolicy = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling spaceTypesGetPolicy");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = PolicyDto;

      return this.apiClient.callApi(
        '/spacetypes/{id}/policy', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the spaceTypesGetSpaceType operation.
     * @callback module:api/SpaceTypesApi~spaceTypesGetSpaceTypeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SpaceTypeDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a space type
     * @param {Number} id the ID of the space type to be retrieved
     * @param {module:api/SpaceTypesApi~spaceTypesGetSpaceTypeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SpaceTypeDto}
     */
    this.spaceTypesGetSpaceType = function(id, callback) {
      var postBody = null;

      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling spaceTypesGetSpaceType");
      }


      var pathParams = {
        'id': id
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json', 'text/json'];
      var returnType = SpaceTypeDto;

      return this.apiClient.callApi(
        '/spacetypes/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
