/**
 * Gateway Software API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GatewaySoftwareApi);
  }
}(this, function(expect, GatewaySoftwareApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GatewaySoftwareApi.TemperatureSensorsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TemperatureSensorsApi', function() {
    describe('temperatureSensorsDelete', function() {
      it('should call temperatureSensorsDelete successfully', function(done) {
        //uncomment below and update the code to test temperatureSensorsDelete
        //instance.temperatureSensorsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('temperatureSensorsDiscover', function() {
      it('should call temperatureSensorsDiscover successfully', function(done) {
        //uncomment below and update the code to test temperatureSensorsDiscover
        //instance.temperatureSensorsDiscover(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('temperatureSensorsEventPost', function() {
      it('should call temperatureSensorsEventPost successfully', function(done) {
        //uncomment below and update the code to test temperatureSensorsEventPost
        //instance.temperatureSensorsEventPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('temperatureSensorsGet', function() {
      it('should call temperatureSensorsGet successfully', function(done) {
        //uncomment below and update the code to test temperatureSensorsGet
        //instance.temperatureSensorsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('temperatureSensorsGetEvents', function() {
      it('should call temperatureSensorsGetEvents successfully', function(done) {
        //uncomment below and update the code to test temperatureSensorsGetEvents
        //instance.temperatureSensorsGetEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('temperatureSensorsGetTemperatureSensor', function() {
      it('should call temperatureSensorsGetTemperatureSensor successfully', function(done) {
        //uncomment below and update the code to test temperatureSensorsGetTemperatureSensor
        //instance.temperatureSensorsGetTemperatureSensor(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('temperatureSensorsPost', function() {
      it('should call temperatureSensorsPost successfully', function(done) {
        //uncomment below and update the code to test temperatureSensorsPost
        //instance.temperatureSensorsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('temperatureSensorsPut', function() {
      it('should call temperatureSensorsPut successfully', function(done) {
        //uncomment below and update the code to test temperatureSensorsPut
        //instance.temperatureSensorsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
